@page "/InputFileExample"
@inject FileSystemAccessService FileSystemAccessService

<PageTitle>InputFile Example</PageTitle>

We can read the bytes from a <code>IBrowserFile</code> from the native <code>InputFile</code> component and write these to the <code>FileSystemWritableFileStream</code>.
<br />
<br />
@if (SaveFileHandle is null)
{
    <button class="btn btn-primary" @onclick=Save>Choose File to Save to</button>
}
else
{
    <InputFile OnChange="OnChange" class="btn btn-primary" />
}

@code {
    FileSystemFileHandle? SaveFileHandle;

    public async Task OnChange(InputFileChangeEventArgs args)
    {
        if (SaveFileHandle is not null)
        {
            var file = args.File;
            using var stream = file.OpenReadStream();
            var writable = await SaveFileHandle.CreateWritableAsync(new() { KeepExistingData = false });
            await stream.CopyToAsync(writable);
            var saveFile = await SaveFileHandle.GetFileAsync();
            var text = await saveFile.TextAsync();
            Console.WriteLine(text);
        }
    }

    public async Task Save()
    {
        SaveFileHandle = await FileSystemAccessService.ShowSaveFilePickerAsync();
        StateHasChanged();
    }
}
